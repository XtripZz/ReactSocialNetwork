{"version":3,"sources":["components/MainContainer/Common/FormsControls/FormsControls.module.css","utils/utils.js","components/MainContainer/Common/FormsControls/FormsControls.js","components/MainContainer/Login/Login.jsx"],"names":["module","exports","required","value","maxLengthCreator","maxLength","length","FormControl","input","meta","touched","error","children","hasError","className","s","formControl","Textarea","props","restProps","child","Input","createField","placeholder","name","validators","component","text","validate","LoginReduxForm","reduxForm","form","handleSubmit","onSubmit","type","style","formSummaryError","connect","state","isAuth","auth","login","to","formData","email","password","rememberMe"],"mappings":"iGACAA,EAAOC,QAAU,CAAC,YAAc,mCAAmC,MAAQ,6BAA6B,iBAAmB,0C,iCCD3H,oEAAO,IAAMC,EAAW,SAAAC,GACpB,IAAIA,EACJ,MAAO,qBAGEC,EAAmB,SAAAC,GAAS,OAAI,SAAAF,GACzC,GAAIA,EAAMG,OAASD,EAAW,MAAM,iBAAN,OAAwBA,EAAxB,e,+LCF5BE,EAAc,SAAC,GAA+C,EAA9CC,MAA+C,IAAD,IAAvCC,KAAOC,EAAgC,EAAhCA,QAASC,EAAuB,EAAvBA,MAAQC,EAAe,EAAfA,SAE3CC,EAAWH,GAAWC,EAE5B,OACI,yBAAKG,UAAWC,IAAEC,YAAc,KAAOH,EAAWE,IAAEJ,MAAQ,KACxD,6BACKC,GAEJC,GAAY,8BAAOF,KAKnBM,EAAW,SAAAC,GAAU,IACvBV,EAAoCU,EAApCV,MAAuBW,GAAaD,EAA7BT,KAA6BS,EAAvBE,MADS,YACcF,EADd,2BAE7B,OAAO,kBAACX,EAAgBW,EACpB,8CAAcV,EAAWW,MAIpBE,EAAQ,SAAAH,GAAU,IACpBV,EAAoCU,EAApCV,MAAuBW,GAAaD,EAA7BT,KAA6BS,EAAvBE,MADM,YACiBF,EADjB,2BAE1B,OAAO,kBAACX,EAAgBW,EACpB,2CAAWV,EAAWW,MAIjBG,EAAc,SAACC,EAAaC,EAAMC,EAAYC,GAAhC,IAA2CR,EAA3C,uDAAmD,GAAIS,EAAvD,uDAA8D,GAA9D,OACvB,6BACI,kBAAC,IAAD,eAAOJ,YAAaA,EAAaC,KAAMA,EAChCI,SAAUH,EACVC,UAAWA,GACPR,IAJf,IAKQS,K,iCCtCZ,+FA4BME,EAAiBC,YAAU,CAC7BC,KAAM,SADaD,EAlBL,SAAC,GAA2B,IAA1BE,EAAyB,EAAzBA,aAAcrB,EAAW,EAAXA,MAC9B,OACI,0BAAMsB,SAAUD,GACXV,YAAY,QAAS,QAAS,CAACpB,KAAWmB,KAC1CC,YAAY,WAAY,WAAY,CAACpB,KAAWmB,IAAO,CAACa,KAAM,aAC9DZ,YAAY,KAAM,aAAc,GAAID,IAAO,CAACa,KAAM,YAAa,cAE5DvB,GAAS,yBAAKG,UAAWqB,IAAMC,kBAC1BzB,GAGT,6BACI,8CA2BD0B,uBAJO,SAAAC,GAAK,MAAK,CAC5BC,OAAQD,EAAME,KAAKD,UAGiB,CAACE,WAA1BJ,EAjBD,SAAAnB,GAKV,OAAIA,EAAMqB,OAAe,kBAAC,IAAD,CAAUG,GAAI,aAEhC,6BACH,qCACA,kBAACb,EAAD,CAAgBI,SARH,SAAAU,GACbzB,EAAMuB,MAAME,EAASC,MAAOD,EAASE,SAAUF,EAASG","file":"static/js/7.f13c838c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__2msPp\",\"error\":\"FormsControls_error__1MSDC\",\"formSummaryError\":\"FormsControls_formSummaryError__2ser5\"};","export const required = value => {\r\n    if (value) return undefined\r\n    return \"Field is required\"\r\n}\r\n\r\nexport const maxLengthCreator = maxLength => value => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`\r\n    return undefined\r\n}","import React from 'react'\r\nimport s from './FormsControls.module.css'\r\nimport {Field} from \"redux-form\";\r\n\r\nconst FormControl = ({input, meta: {touched, error}, children,}) => {\r\n\r\n    const hasError = touched && error\r\n\r\n    return (\r\n        <div className={s.formControl + \" \" + (hasError ? s.error : \"\")}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {hasError && <span>{error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = props => {\r\n    const {input, meta, child, ...restProps} = props\r\n    return <FormControl {...props}>\r\n        <textarea {...input} {...restProps} />\r\n    </FormControl>\r\n}\r\n\r\nexport const Input = props => {\r\n    const {input, meta, child, ...restProps} = props\r\n    return <FormControl {...props}>\r\n        <input {...input} {...restProps} />\r\n    </FormControl>\r\n}\r\n\r\nexport const createField = (placeholder, name, validators, component, props = {}, text = \"\") => (\r\n    <div>\r\n        <Field placeholder={placeholder} name={name}\r\n               validate={validators}\r\n               component={component}\r\n               {...props}\r\n        /> {text}\r\n    </div>\r\n)","import React from 'react'\r\nimport {reduxForm} from \"redux-form\";\r\nimport {createField, Input} from \"../Common/FormsControls/FormsControls\";\r\nimport {required} from \"../../../utils/utils\";\r\nimport {login} from \"../../../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport style from \"./../Common/FormsControls/FormsControls.module.css\"\r\n\r\n\r\nconst LoginForm = ({handleSubmit, error}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            {createField(\"Email\", \"email\", [required], Input)}\r\n            {createField(\"Password\", \"password\", [required], Input, {type: \"password\"})}\r\n            {createField(null, \"rememberMe\", [], Input, {type: \"checkbox\"}, \"rememberMe\")}\r\n            {\r\n                error && <div className={style.formSummaryError}>\r\n                    {error}\r\n                </div>\r\n            }\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({\r\n    form: 'login'\r\n})(LoginForm)\r\n\r\nconst Login = props => {\r\n    const onSubmit = formData => {\r\n        props.login(formData.email, formData.password, formData.rememberMe)\r\n    }\r\n\r\n    if (props.isAuth) return <Redirect to={\"/profile\"}/>\r\n\r\n    return <div>\r\n        <h1>Login</h1>\r\n        <LoginReduxForm onSubmit={onSubmit}/>\r\n    </div>\r\n}\r\n\r\nlet mapStateToProps = state => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, {login})(Login)"],"sourceRoot":""}